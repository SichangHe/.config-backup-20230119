# Command providers - activate on command line enter or specific commands
[[plugins]]
repo = 'junegunn/fzf'
on_event = 'CmdLineEnter'
[[plugins]]
repo = 'junegunn/fzf.vim'
on_event = 'CmdLineEnter'

[[plugins]]
repo = 'numToStr/Comment.nvim'
on_event = 'CmdLineEnter'
hook_post_source = "lua require('Comment').setup {}"

[[plugins]]
repo = 'tpope/vim-fugitive'
on_event = 'CmdLineEnter'


[[plugins]]
repo = 'rcarriga/nvim-notify'
on_event = 'VimEnter'
hook_post_source = "lua require('notify').setup {top_down = false, stages = 'static'}"
[[plugins]]
repo = 'MunifTanjim/nui.nvim'
on_event = 'VimEnter'
[[plugins]]
repo = 'folke/noice.nvim'
on_event = 'VimEnter'
hook_post_source = "lua require('noice').setup {}"

[[plugins]]
repo = 'windwp/nvim-autopairs'
on_event = 'InsertEnter'
hook_post_source = "lua require('nvim-autopairs').setup {}"

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_cmd = 'MarkdownPreview'
build = 'cd app && yarn'

[[plugins]]
repo = 'mhinz/vim-grepper'
on_event = 'CmdLineEnter'

[[plugins]]
repo = 'machakann/vim-swap'
on_event = 'InsertEnter'

## diffview.nvim
[[plugins]]
repo = 'nvim-lua/plenary.nvim'
on_event = 'CmdLineEnter'
[[plugins]]
repo = 'sindrets/diffview.nvim'
on_event = 'CmdLineEnter'
[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'
on_event = 'CmdLineEnter'
hook_post_source = "lua require('nvim-web-devicons').setup {default = true}"

# Languages support - activate on filetype in current directory
[[plugins]]
repo = 'neoclide/coc-json'
name = 'json'
build = 'yarn'
on_event = ['VimEnter', 'DirChanged']
on_if = "system('fd -t f -q -e json -e jsonc') == 0"

[[plugins]]
repo = 'neoclide/coc-solargraph'
name = 'solargraph'
build = 'yarn'
on_event = ['VimEnter', 'DirChanged']
on_if = "system('fd -t f -q -e rb') == 0"

[[plugins]]
repo = 'josa42/coc-lua'
name = 'lua'
build = 'yarn'
on_event = ['VimEnter', 'DirChanged']
on_if = "system('fd -t f -q -e lua') == 0"

[[plugins]]
repo = 'fannheyward/coc-pyright'
on_event = ['VimEnter', 'DirChanged']
on_if = "system('fd -t f -q -e py') == 0"
build = 'yarn'

[[plugins]]
repo = 'clangd/coc-clangd'
on_event = ['VimEnter', 'DirChanged']
on_if = "system('fd -t f -q -e c -e cpp -e cc -e cxx -e h -e hpp -e hh') == 0"
build = 'yarn'

[[plugins]]
repo = 'neoclide/coc-tsserver'
on_event = ['VimEnter', 'DirChanged']
on_if = "system('fd -t f -q -e js -e ts') == 0"
build = 'yarn'

## Markdown
[[plugins]]
repo = 'fannheyward/coc-markdownlint'
name = 'markdownlint'
build = 'yarn'
on_event = ['VimEnter', 'DirChanged']
on_if = "system('fd -t f -q -e md') == 0"

[[plugins]]
repo = 'preservim/vim-markdown'
name = 'markdown'
on_event = ['VimEnter', 'DirChanged']
on_if = "system('fd -t f -q -e md') == 0"

[[plugins]]
repo = 'fannheyward/coc-rust-analyzer'
name = 'rust-analyzer'
on_event = ['VimEnter', 'DirChanged']
on_if = "system('fd -t f -q -e rs') == 0"
build = 'yarn'

[[plugins]]
repo = 'elixir-lsp/coc-elixir'
on_event = ['VimEnter', 'DirChanged']
on_if = "system('fd -t f -q -e ex -e exs') == 0"
build = 'yarn && yarn prepack'
